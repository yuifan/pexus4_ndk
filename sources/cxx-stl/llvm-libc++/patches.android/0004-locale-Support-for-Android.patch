From 0d7f6c7dbf3707c82bc739d7a676e3d322b18813 Mon Sep 17 00:00:00 2001
From: David 'Digit' Turner <digit@google.com>
Date: Thu, 2 May 2013 14:12:35 +0200
Subject: locale: Support for Android.

---
 include/__locale | 14 ++++++++++++++
 src/locale.cpp   |  5 +++++
 2 files changed, 19 insertions(+)

diff --git a/include/__locale b/include/__locale
index 24d565b..8c93b71 100644
--- a/include/__locale
+++ b/include/__locale
@@ -369,6 +369,20 @@ public:
     static const mask punct  = _ISPUNCT;
     static const mask xdigit = _ISXDIGIT;
     static const mask blank  = _ISBLANK;
+#elif defined(__ANDROID__)
+    typedef char mask;
+    static const mask space  = _S;
+    static const mask print  = _P | _U | _L | _N | _B;
+    static const mask cntrl  = _C;
+    static const mask upper  = _U;
+    static const mask lower  = _L;
+    static const mask alpha  = _U | _L;
+    static const mask digit  = _N;
+    static const mask punct  = _P;
+    static const mask xdigit = _N | _X;
+
+    // TODO(ajwong): bionic doesn't have a blank mask
+    static const mask blank  = 0;
 #else  // __GLIBC__ || _WIN32 || __APPLE__ || __FreeBSD__ || EMSCRIPTEN || __sun__
     typedef unsigned long mask;
     static const mask space  = 1<<0;
diff --git a/src/locale.cpp b/src/locale.cpp
index 49c1cf2..5667f8d 100644
--- a/src/locale.cpp
+++ b/src/locale.cpp
@@ -991,6 +991,11 @@ ctype<char>::classic_table()  _NOEXCEPT
     return _DefaultRuneLocale.__runetype;
 #elif defined(__GLIBC__)
     return __cloc()->__ctype_b;
+#elif defined(__ANDROID__)
+    // TODO(ajwong): Should the actual traits functions delegate to the
+    // bionic ctype variants? Or should we do something similar to how we
+    // handle glibc where we use the _tolower_tab_ and _toupper_tab_ directly?
+    return __ctype_c_mask_table;
 #elif __sun__
     return __ctype_mask;
 #elif defined(_WIN32)
-- 
1.7.12.146.g16d26b1

